// SPDX-License-Identifier: AGPL-3.0
pragma solidity ^0.8;

import 'forge-std/Test.sol';
import '../src/CicadaCumulativeVote.sol';
import '../src/LibUint1024.sol';
import '../src/LibSigmaProtocol.sol';


contract LibSigmaProtocolWrapper {

    function verifyProofOfPuzzleValidity(
        CicadaCumulativeVote.PublicParameters memory pp,
        bytes32 parametersHash,
        CicadaCumulativeVote.Puzzle memory Z,
        LibSigmaProtocol.ProofOfPuzzleValidity memory proof
    )
        external
        view
    {
        LibSigmaProtocol.verifyProofOfPuzzleValidity(
            pp.N, pp.g, pp.h, pp.y, 
            parametersHash, 
            Z.u, 
            Z.v, 
            proof
        );
    }

    function verifyProofOfPositivity(
        CicadaCumulativeVote.PublicParameters memory pp,
        bytes32 parametersHash,
        uint256[4] memory v,
        LibSigmaProtocol.ProofOfPositivity memory proof
    )
        external
        view
    {
        LibSigmaProtocol.verifyProofOfPositivity(
            pp.N, pp.h, pp.hInv, pp.y, 
            parametersHash, 
            v, 
            proof
        );
    }

    function verifyProofOfSquare(
        CicadaCumulativeVote.PublicParameters memory pp,
        bytes32 parametersHash,
        uint256[4] memory squarePuzzle,
        LibSigmaProtocol.ProofOfSquare memory proof
    )
        external
        view
    {
        LibSigmaProtocol.verifyProofOfSquare(
            pp.N, pp.h, pp.hInv, pp.y, 
            parametersHash, 
            squarePuzzle, 
            proof
        );
    }


    function verifyProofOfEquality(
        CicadaCumulativeVote.PublicParameters memory pp,
        bytes32 parametersHash,
        uint256[4] memory v1,
        uint256[4] memory v2,
        LibSigmaProtocol.ProofOfEquality memory proof
    )
        external
        view
    {
        LibSigmaProtocol.verifyProofOfEquality(
            pp.N, pp.h, pp.y, 
            parametersHash, 
            v1, 
            v2, 
            proof
        );
    }

    function verifyExponentiation(
        CicadaCumulativeVote.PublicParameters memory pp,
        bytes32 parametersHash,
        uint256[4] memory u,
        uint256[4] memory w,
        LibSigmaProtocol.ProofOfExponentiation memory proof
    )
        external
        view
    {
        LibSigmaProtocol.verifyExponentiation(
            pp.T, pp.N, 
            parametersHash, 
            u, 
            w, 
            proof
        );
    }
}


contract LibSigmaProtocolTest is Test {
    using LibUint1024 for *;

    LibSigmaProtocolWrapper lib;

    function setUp() external {
        lib = new LibSigmaProtocolWrapper();
    }

    function testProofOfPuzzleValidity()
        external
        view
    {
        CicadaCumulativeVote.PublicParameters memory pp;
        pp.T = 4452;
        pp.N = [
            uint256(77172362864111114617917748173391518563926130646781395897952735037423669352854),
            uint256(96610448261158043896293629060087861863404094154536739522860101998449170256583),
            uint256(97942404613937553763725581857146462333053305725299043693607248412409052994209),
            uint256(15379587426505179214663355879126025467482381195924531218666088203234607799637)
        ];
        pp.g = [
            uint256(31484368619405306455498604353943240416111110145832042297195190976655112376964),
            uint256(38359878711059391060735500500529460021858509176960929479667651629224281458333),
            uint256(115598099196790108900646995963611087597017935348396589955485411152085706743825),
            uint256(76849393427099187827869375195281279617798137231705174312201793846204840372062)
        ];
        pp.h = [
            uint256(590527877384768893130631790812773015759685958225295452510747165528588670397),
            uint256(72291402931824529649172306290000012059922418408720348768826120867848108629147),
            uint256(76779887900233739716514715466947754001069682222045324277428108670980920990655),
            uint256(3980807396130520052695088382486288301695223925536648410058494555600925977185)
        ];
        pp.hInv = [
            uint256(34764539044926822164021136823309345537749873087530752915619055562384113546117),
            uint256(57386334516737500354100807535393921130389873722942984559132190027458642292714),
            uint256(104800993298631777495567185751365059884615420581886169792632150257219861157607),
            uint256(69079518781174040778316218833267633011055238369184647219609717111146288222189)
        ];
        pp.y = [
            uint256(18508833567985533119139824546014332612604200347877634948684658578949808524280),
            uint256(18140003136614563329371859086819862290911727990827699593541553692281294658699),
            uint256(101217615013961113687930883648244246261983301370750402118608436582374430435509),
            uint256(109809972910993681855269086084485078391917408553163149740887002672685155412622)
        ];
        pp.yInv = [
            uint256(11677904783625675387637725069251701926294351662574309010779968876809930810938),
            uint256(26463744512152389540047219731907891929210679393261299356324082131370119869412),
            uint256(48397139188391034596894324238709346317534898910817201140606079770950282420247),
            uint256(36448590461336618271609601581775872375566824589321005757475075632599038903551)
        ];
        bytes32 parametersHash = keccak256(abi.encode(pp));

        CicadaCumulativeVote.Puzzle memory Z;
        Z.u = [
            uint256(3997512729968016388842927150182942306495361775410914503389125093457203850236),
            uint256(100802473715559589609221853958696454510118048831516636370942508356841018987087),
            uint256(20163877804558199052258575241114995761529134504025791701155892465366515803091),
            uint256(100034498472223422188677311977199558042785774436202349034149630134291986472964)
        ];
        Z.v = [
            uint256(13748828106756090026701016697001905666456676863723308019820669391317048517906),
            uint256(71418500778683995659969803046031066493729489807159391462910961136967149186977),
            uint256(97713352469726980756493996714445292838367458278909044850932808493456480605268),
            uint256(93589237495825504640896385566006783106596006842532221068235734045559760564565)
        ];

        LibSigmaProtocol.ProofOfPuzzleValidity memory PoPV;
        PoPV.a = [
            uint256(14886840439875212047218329434712854507558832024923716747745186233392570336646),            
            uint256(3260214416063634679223182777181828373819753230436518935901304797392282034427),            
            uint256(16196104623703495271790931405689360230419951969155216434652249251418370871060),            
            uint256(52502569132241026520162718200713789479913077027423738461756269879437735521310)            
        ];
        PoPV.b = [
            uint256(17689157885135208091157662981769072768696405020381133913973732630096110145864),            
            uint256(11721166644745816315115449889286725238451506403800843039735177734293330715348),            
            uint256(63634279184203529323253045682358449270267873911491007601587626106848004344566),            
            uint256(7750857309762361430618065631911096746823319708331769664936218232063105537631)            
        ];
        PoPV.alpha = [
            uint256(0),            
            uint256(0),            
            uint256(9128795856286661123096097488512564339153028649144040055821587375237365567950),            
            uint256(59725891357426109062952443537868142461362263110821373041389397895096589043729)            
        ];
        PoPV.beta = [
            uint256(0),            
            uint256(0),            
            uint256(4),            
            uint256(31037749160904283403269085548628612851621138596358258131276450188541425838833)            
        ];

        lib.verifyProofOfPuzzleValidity(pp, parametersHash, Z, PoPV);
    }

    function testProofOfPositivity()
        external
        view
    {
        CicadaCumulativeVote.PublicParameters memory pp;
        pp.T = 4452;
        pp.N = [
            uint256(77172362864111114617917748173391518563926130646781395897952735037423669352854),
            uint256(96610448261158043896293629060087861863404094154536739522860101998449170256583),
            uint256(97942404613937553763725581857146462333053305725299043693607248412409052994209),
            uint256(15379587426505179214663355879126025467482381195924531218666088203234607799637)
        ];
        pp.g = [
            uint256(31484368619405306455498604353943240416111110145832042297195190976655112376964),
            uint256(38359878711059391060735500500529460021858509176960929479667651629224281458333),
            uint256(115598099196790108900646995963611087597017935348396589955485411152085706743825),
            uint256(76849393427099187827869375195281279617798137231705174312201793846204840372062)
        ];
        pp.h = [
            uint256(590527877384768893130631790812773015759685958225295452510747165528588670397),
            uint256(72291402931824529649172306290000012059922418408720348768826120867848108629147),
            uint256(76779887900233739716514715466947754001069682222045324277428108670980920990655),
            uint256(3980807396130520052695088382486288301695223925536648410058494555600925977185)
        ];
        pp.hInv = [
            uint256(34764539044926822164021136823309345537749873087530752915619055562384113546117),
            uint256(57386334516737500354100807535393921130389873722942984559132190027458642292714),
            uint256(104800993298631777495567185751365059884615420581886169792632150257219861157607),
            uint256(69079518781174040778316218833267633011055238369184647219609717111146288222189)
        ];
        pp.y = [
            uint256(18508833567985533119139824546014332612604200347877634948684658578949808524280),
            uint256(18140003136614563329371859086819862290911727990827699593541553692281294658699),
            uint256(101217615013961113687930883648244246261983301370750402118608436582374430435509),
            uint256(109809972910993681855269086084485078391917408553163149740887002672685155412622)
        ];
        pp.yInv = [
            uint256(11677904783625675387637725069251701926294351662574309010779968876809930810938),
            uint256(26463744512152389540047219731907891929210679393261299356324082131370119869412),
            uint256(48397139188391034596894324238709346317534898910817201140606079770950282420247),
            uint256(36448590461336618271609601581775872375566824589321005757475075632599038903551)
        ];
        bytes32 parametersHash = keccak256(abi.encode(pp));

        CicadaCumulativeVote.Puzzle memory Z;
        Z.u = [
            uint256(887462692520915259869141383783066555778344812261793659665333329228019420089),
            uint256(16293793205686389624170316818825563282760384695797258235701353560225654856419),
            uint256(106277902132177912091133166651063156520600511872639416127590291262933772661093),
            uint256(104675198300397904266122512830532904228341203154042811629604090553053631670591)
        ];
        Z.v = [
            uint256(38293729270846125063502860411222113749499175791576089136246907443453197299482),
            uint256(55165096184053678138685607078067465158922168939499828845042413599815021709524),
            uint256(12860638012290390694250995483140617395255474602488639294382963881542467764796),
            uint256(72150772192616125790370771118185141520619741409738355002396524463934388983583)
        ];

        LibSigmaProtocol.ProofOfPositivity memory proof;
        proof.squareDecomposition[0] = [
            uint256(37777839069453959526712899403394044990205257074950855642110317319236369305705),            
            uint256(62899886327416614267291615355667884172326846404110159583792319967400269307291),            
            uint256(66563810757312838035346552239610241642954076093868115271395102761377748056168),            
            uint256(74111229509653686209462130888659056977702987023457258219541376052482532398527)            
        ];
        proof.squareDecomposition[1] = [
            uint256(38342600238458742025679433673344062969447692226600648948990456348791115581161),            
            uint256(70739845951833853731150369735825768245171989273964778438299111021638604663919),            
            uint256(90091234965666492843627794331899140631568044043055513874947116176395417912774),            
            uint256(109148492939863448301829596141153959789433343695708564088199991580799128277606)            
        ];
        proof.squareDecomposition[2] = [
            uint256(16664251874601899457496381557094420659540201816930058473469279260760417270976),            
            uint256(111874826401752701839932090661475326327010056562024465646446134336101130184248),            
            uint256(23158130999407535229729257035398588393720832847577963351463895261834551827725),            
            uint256(111802117791984249591870795675078532855479676726298667397330722957969591876214)            
        ];

        proof.PoKSqS[0].squareRoot = [
            uint256(12717030650352508099972903809776512497663983450227396477626181050220412335647),            
            uint256(90085247902452006309088451594799354740899937315881692194579868944739852131675),            
            uint256(96340578287706425164065637445512232972668135043761743478257272244891637617154),            
            uint256(54176079745938063950424856659846371644020166143749549182939379827742819320782)            
        ];
        proof.PoKSqS[0].A1 = [
            uint256(32594430706965568473868317886266191596621078487274854837053104225588589868265),            
            uint256(2009927956653639406853626733890709521540239186112022182892530298764538420505),            
            uint256(96121360039829370153354900110782831723471493279337768421344899534079441988324),            
            uint256(8711882291958327867735653624063652785213061232915068658361174390267335374030)            
        ];
        proof.PoKSqS[0].A2 = [
            uint256(18170540313700585221209768249616380038468766734237259372342442359099603954185),            
            uint256(65510327661326046192702237770490987479105803147583862060424918230425076144653),            
            uint256(37485549732265774583294805746767528712367634033251996374443215119658613538037),            
            uint256(10614654458338747278283939819386925240154290352788759399946117907579757389528)            
        ];
        proof.PoKSqS[0].x = [
            uint256(0),            
            uint256(0),            
            uint256(0),            
            uint256(62414939075414150973140416266591428120868623842288095983481072390235529214060)            
        ];
        proof.PoKSqS[0].w1 = [
            uint256(0),            
            uint256(0),            
            uint256(15710818248190904269016324991887022932533604207663378221691855579709960098614),            
            uint256(6439013368608678176163454941442830731886850622123214510657522580914376233522)            
        ];
        proof.PoKSqS[0].w2 = [
            uint256(0),            
            uint256(0),            
            uint256(3991130081887143064387976870500700112729524224478914554140274006504932124444),            
            uint256(26756669711863799441989031963336583517977764066479490277636645947356643774830)            
        ];
        proof.PoKSqS[0].w2IsNegative = false;
        proof.PoKSqS[1].squareRoot = [
            uint256(22783815226177596161772301124457728819200661219327723831050976391842115012466),            
            uint256(25962031592564564645709691478401588149317828737453052630870411727657572245861),            
            uint256(36027953619200604188510218802161347128921984080229884272476151438023088017128),            
            uint256(110038572433890966654159154225247050934186045344870184236758121242789980006322)            
        ];
        proof.PoKSqS[1].A1 = [
            uint256(3378430821232209586109846905603780103076777442343162859881446961976981518054),            
            uint256(66916455954960509300155298940924367415981861985984141905524125239608299728937),            
            uint256(2704094570472953176617365579724939445825808143529061126144207854343473699013),            
            uint256(61171892036786885953291372994187308633805140399588186523409037035114643277011)            
        ];
        proof.PoKSqS[1].A2 = [
            uint256(4964281762627012017026249743500325267225312315904580113456450162294184104947),            
            uint256(113912582562283386108204164468499782761822114906197718426082059097352306855825),            
            uint256(13869412095236364099514068260059203426251503025742532162548117992642219388256),            
            uint256(105241586394301855173667714717945645536368649800931714546933774351300823770254)            
        ];
        proof.PoKSqS[1].x = [
            uint256(0),            
            uint256(0),            
            uint256(4),            
            uint256(70068121052026022205195877304445365420867138066584876548954735785096183131024)            
        ];
        proof.PoKSqS[1].w1 = [
            uint256(0),            
            uint256(0),            
            uint256(73905739141471546789977775726077351360048795872844581920407309844797083031837),            
            uint256(26087918928221416853728016143608560202675091803824549746493043138920007749959)            
        ];
        proof.PoKSqS[1].w2 = [
            uint256(0),            
            uint256(2),            
            uint256(104047165026899854598806508274055859996323457823617104709283989633988552188202),            
            uint256(34785516938349393557270984772418801632981425120892680457188809928258379132760)            
        ];
        proof.PoKSqS[1].w2IsNegative = true;
        proof.PoKSqS[2].squareRoot = [
            uint256(3581083624174304616704217663923905774109478129353479498513310240845750146095),            
            uint256(104428287232793887484731957456427970275850564888313794728461733247023659323601),            
            uint256(20165668907794660420989270132426784046448518646487221524592380130055005977842),            
            uint256(90766017345929750751614664399458321932992261931883269773508139814932145058617)            
        ];
        proof.PoKSqS[2].A1 = [
            uint256(11313009041334631515497278184481753661494733074747014234425692515893743787997),            
            uint256(14261622188381621092593639787108944715296112282291227000279208620401141815568),            
            uint256(93007809832908029695090899436699360439271239814806530048847383618517926311386),            
            uint256(71943032353477628296954497463293796850765812754895957396379574263698994285659)            
        ];
        proof.PoKSqS[2].A2 = [
            uint256(20498472934041905432695555103027147131025420807285152983428012622378245453864),            
            uint256(86940836568279868569985964874562982059442882895684479536474188749173807354978),            
            uint256(95804812235905492162588362734882572942869548481811145431253286218329390403206),            
            uint256(52216947245563723707663422912939992659708918481412636134188502353155305862516)            
        ];
        proof.PoKSqS[2].x = [
            uint256(0),            
            uint256(0),            
            uint256(5),            
            uint256(38873242227953449464481965351264902591288919592379714123782237319996703460996)            
        ];
        proof.PoKSqS[2].w1 = [
            uint256(0),            
            uint256(0),            
            uint256(75627823110016462760925659251968346968121775217799010529407492083923639755836),            
            uint256(26317837608207147562493073692811511749260953946847332923248385148575011401589)            
        ];
        proof.PoKSqS[2].w2 = [
            uint256(0),            
            uint256(3),            
            uint256(18897067856108171338594577195848098528135528227115404035666860991836774463530),            
            uint256(72435176492988503994424889295352079302640364791348145797114344516688287027661)            
        ];
        proof.PoKSqS[2].w2IsNegative = true;

        proof.PoKSEq.A1 = [
            uint256(2901797036441200896896450646619197954397485008683637872423430127076917802222),
            uint256(89104482259102494449088129583614145454979220147679542595813543883012933641192),
            uint256(80605094145503552665655730738729124604794190023001915426660530250227263582900),
            uint256(71352781516344412084335215305034998510253253370925982588816194644226123427283)
        ];
        proof.PoKSEq.A2 = [
            uint256(31787039916975681967477097034015424259284615554641095462673761873208464150792),
            uint256(34430590301374158808961014373341478964468208924482621422046908000628410009787),
            uint256(92665460305615781478441696656890416088293800541878867288582398577248317430724),
            uint256(72488925702756137937879083844551507878293929403978782315877185169873226047135)
        ];
        proof.PoKSEq.x = [
            uint256(0),
            uint256(0),
            uint256(28),
            uint256(25973523200909470883171694879804863089009754828811577808467273185566717662620)
        ];
        proof.PoKSEq.w1 = [
            uint256(0),
            uint256(0),
            uint256(82784751250043379186198719053181182844940131660136773043834112016865752238195),
            uint256(49312104213924173601850930916861311526244833341378101434950046862682107570269)
        ];
        proof.PoKSEq.w2 = [
            uint256(0),
            uint256(0),
            uint256(60908078239249002632792310482334518249214883038122944432405438495423807436221),
            uint256(85526931026625403186329291005039964655356647998635856536445579659119207814031)
        ];
        
        lib.verifyProofOfPositivity(pp, parametersHash, Z.v, proof);
    }

    function testProofOfEquality()
        external
        view
    {
        CicadaCumulativeVote.PublicParameters memory pp;
        pp.T = 4452;
        pp.N = [
            uint256(77172362864111114617917748173391518563926130646781395897952735037423669352854),
            uint256(96610448261158043896293629060087861863404094154536739522860101998449170256583),
            uint256(97942404613937553763725581857146462333053305725299043693607248412409052994209),
            uint256(15379587426505179214663355879126025467482381195924531218666088203234607799637)
        ];
        pp.g = [
            uint256(31484368619405306455498604353943240416111110145832042297195190976655112376964),
            uint256(38359878711059391060735500500529460021858509176960929479667651629224281458333),
            uint256(115598099196790108900646995963611087597017935348396589955485411152085706743825),
            uint256(76849393427099187827869375195281279617798137231705174312201793846204840372062)
        ];
        pp.h = [
            uint256(590527877384768893130631790812773015759685958225295452510747165528588670397),
            uint256(72291402931824529649172306290000012059922418408720348768826120867848108629147),
            uint256(76779887900233739716514715466947754001069682222045324277428108670980920990655),
            uint256(3980807396130520052695088382486288301695223925536648410058494555600925977185)
        ];
        pp.hInv = [
            uint256(34764539044926822164021136823309345537749873087530752915619055562384113546117),
            uint256(57386334516737500354100807535393921130389873722942984559132190027458642292714),
            uint256(104800993298631777495567185751365059884615420581886169792632150257219861157607),
            uint256(69079518781174040778316218833267633011055238369184647219609717111146288222189)
        ];
        pp.y = [
            uint256(18508833567985533119139824546014332612604200347877634948684658578949808524280),
            uint256(18140003136614563329371859086819862290911727990827699593541553692281294658699),
            uint256(101217615013961113687930883648244246261983301370750402118608436582374430435509),
            uint256(109809972910993681855269086084485078391917408553163149740887002672685155412622)
        ];
        pp.yInv = [
            uint256(11677904783625675387637725069251701926294351662574309010779968876809930810938),
            uint256(26463744512152389540047219731907891929210679393261299356324082131370119869412),
            uint256(48397139188391034596894324238709346317534898910817201140606079770950282420247),
            uint256(36448590461336618271609601581775872375566824589321005757475075632599038903551)
        ];
        bytes32 parametersHash = keccak256(abi.encode(pp));
        
        uint256[4] memory v1 = [5626600152366824669233901523132733258402581607736625184797409013434769701685, 23862774236957136385712418592576135032432774043929708680752556139752127611794, 87270513909567520831108240098540184178838959278461692173060609812268162938716, 66950553564142797155221290554549137486439695816244044298315198908602558191908];
        uint256[4] memory v2 = [6820396795561961871084530021121058628623467948354449279473183899328719006731, 58549807786766396278618644448564630821164757400674313141490654427058464868632, 1458249374835665480179829792932812489626135403117711886981646855584902771877, 94400495620780004096510376838141556088108270111286943049168775283482490237224];

        LibSigmaProtocol.ProofOfEquality memory proof;
        proof.A1 = [2901797036441200896896450646619197954397485008683637872423430127076917802222, 89104482259102494449088129583614145454979220147679542595813543883012933641192, 80605094145503552665655730738729124604794190023001915426660530250227263582900, 71352781516344412084335215305034998510253253370925982588816194644226123427283];
        proof.A2 = [31787039916975681967477097034015424259284615554641095462673761873208464150792, 34430590301374158808961014373341478964468208924482621422046908000628410009787, 92665460305615781478441696656890416088293800541878867288582398577248317430724, 72488925702756137937879083844551507878293929403978782315877185169873226047135];
        proof.x = [0, 0, 28, 25973523200909470883171694879804863089009754828811577808467273185566717662620];
        proof.w1 = [0, 0, 82784751250043379186198719053181182844940131660136773043834112016865752238195, 49312104213924173601850930916861311526244833341378101434950046862682107570269];
        proof.w2 = [0, 0, 60908078239249002632792310482334518249214883038122944432405438495423807436221, 85526931026625403186329291005039964655356647998635856536445579659119207814031];

        lib.verifyProofOfEquality(pp, parametersHash, v1, v2, proof);
    }

    function testProofOfSquare()
        external
        view
    {
        CicadaCumulativeVote.PublicParameters memory pp;
        pp.T = 4452;
        pp.N = [
            uint256(77172362864111114617917748173391518563926130646781395897952735037423669352854),
            uint256(96610448261158043896293629060087861863404094154536739522860101998449170256583),
            uint256(97942404613937553763725581857146462333053305725299043693607248412409052994209),
            uint256(15379587426505179214663355879126025467482381195924531218666088203234607799637)
        ];
        pp.g = [
            uint256(31484368619405306455498604353943240416111110145832042297195190976655112376964),
            uint256(38359878711059391060735500500529460021858509176960929479667651629224281458333),
            uint256(115598099196790108900646995963611087597017935348396589955485411152085706743825),
            uint256(76849393427099187827869375195281279617798137231705174312201793846204840372062)
        ];
        pp.h = [
            uint256(590527877384768893130631790812773015759685958225295452510747165528588670397),
            uint256(72291402931824529649172306290000012059922418408720348768826120867848108629147),
            uint256(76779887900233739716514715466947754001069682222045324277428108670980920990655),
            uint256(3980807396130520052695088382486288301695223925536648410058494555600925977185)
        ];
        pp.hInv = [
            uint256(34764539044926822164021136823309345537749873087530752915619055562384113546117),
            uint256(57386334516737500354100807535393921130389873722942984559132190027458642292714),
            uint256(104800993298631777495567185751365059884615420581886169792632150257219861157607),
            uint256(69079518781174040778316218833267633011055238369184647219609717111146288222189)
        ];
        pp.y = [
            uint256(18508833567985533119139824546014332612604200347877634948684658578949808524280),
            uint256(18140003136614563329371859086819862290911727990827699593541553692281294658699),
            uint256(101217615013961113687930883648244246261983301370750402118608436582374430435509),
            uint256(109809972910993681855269086084485078391917408553163149740887002672685155412622)
        ];
        pp.yInv = [
            uint256(11677904783625675387637725069251701926294351662574309010779968876809930810938),
            uint256(26463744512152389540047219731907891929210679393261299356324082131370119869412),
            uint256(48397139188391034596894324238709346317534898910817201140606079770950282420247),
            uint256(36448590461336618271609601581775872375566824589321005757475075632599038903551)
        ];
        bytes32 parametersHash = keccak256(abi.encode(pp));

        uint256[4] memory squarePuzzle = [
            uint256(37777839069453959526712899403394044990205257074950855642110317319236369305705),            
            uint256(62899886327416614267291615355667884172326846404110159583792319967400269307291),            
            uint256(66563810757312838035346552239610241642954076093868115271395102761377748056168),            
            uint256(74111229509653686209462130888659056977702987023457258219541376052482532398527)            
        ];

        LibSigmaProtocol.ProofOfSquare memory proof;
        proof.squareRoot = [
            uint256(12717030650352508099972903809776512497663983450227396477626181050220412335647),            
            uint256(90085247902452006309088451594799354740899937315881692194579868944739852131675),            
            uint256(96340578287706425164065637445512232972668135043761743478257272244891637617154),            
            uint256(54176079745938063950424856659846371644020166143749549182939379827742819320782)            
        ];
        proof.A1 = [
            uint256(32594430706965568473868317886266191596621078487274854837053104225588589868265),            
            uint256(2009927956653639406853626733890709521540239186112022182892530298764538420505),            
            uint256(96121360039829370153354900110782831723471493279337768421344899534079441988324),            
            uint256(8711882291958327867735653624063652785213061232915068658361174390267335374030)            
        ];
        proof.A2 = [
            uint256(18170540313700585221209768249616380038468766734237259372342442359099603954185),            
            uint256(65510327661326046192702237770490987479105803147583862060424918230425076144653),            
            uint256(37485549732265774583294805746767528712367634033251996374443215119658613538037),            
            uint256(10614654458338747278283939819386925240154290352788759399946117907579757389528)            
        ];
        proof.x = [
            uint256(0),            
            uint256(0),            
            uint256(0),            
            uint256(62414939075414150973140416266591428120868623842288095983481072390235529214060)            
        ];
        proof.w1 = [
            uint256(0),            
            uint256(0),            
            uint256(15710818248190904269016324991887022932533604207663378221691855579709960098614),            
            uint256(6439013368608678176163454941442830731886850622123214510657522580914376233522)            
        ];
        proof.w2 = [
            uint256(0),            
            uint256(0),            
            uint256(3991130081887143064387976870500700112729524224478914554140274006504932124444),            
            uint256(26756669711863799441989031963336583517977764066479490277636645947356643774830)            
        ];
        proof.w2IsNegative = false;

        lib.verifyProofOfSquare(
            pp,
            parametersHash,
            squarePuzzle,
            proof
        );
    }

    function testProofOfExponentiation()
        external
        view
    {
        CicadaCumulativeVote.PublicParameters memory pp;
        pp.N = [
            84348763984871917370346774297749981271626936286452355359821953072298717038149,
            35095280420769876708030057819944870631893047888122633737517382581267070516477,
            65516005424143632508578407360332036242005810706935846240285841715236283872173,
            50032405382199644076911930020437497413912248439115889001324519936378863097025
        ];
        pp.T = 11365;
        pp.g = [
            35023473790439515458136774651271566361250105408060832586649875576214319463909,
            40743163794912137082386461366391512857124756880269630363331299825232069546366,
            101660322567448401963756239045825247861412304914929880770583713260065338015085,
            76331960040015371570982996175452448416873619017341965529473882993218547554494
        ];
        pp.h = [
            4122102804312462461703018789016169637889991947265240667543580982358488623784,
            60989976591980197459669623747169967627274411904481411607896370787447765939318,
            30020065440086954884941395505248947805583566864072909741593507326990995727342,
            50538584662655560927640089476759984386227145361565875838825182585531078819104
        ];
        pp.hInv = [
            14614636095970743811145791726562352501302517981670763023640737475476221628516,
            84063580991148938555976594530017495900336529965709170709423227895328155530582,
            15091510291698085691777709818411591997703865767472977554899350923157387363494,
            5861728868727304498400441792297095423498160014694668570575418686166394094754
        ];
        pp.y = [
            13300934532900028724600184428479728575929455582530404468664376535673213645414,
            34394357487721753779151034544831136002108693679753743708736138346223664473126,
            68395622591938456936422540655342221186777520645959172254222537627596873526086,
            60473463122219299263421758885553872182042815490595872018221801986521783728016
        ];
        pp.yInv = [
            22625891404596477424223972270976420200462687725214327456186334952617006232281,
            49537416165327880103593739910399541936515874526550429652048287375189214840829,
            107890539655751965246234939838799471477089179058144643841980654919959876476556,
            75523769783762055430402132276456380413752862103233500719539080811466716840947
        ];
        bytes32 parametersHash = keccak256(abi.encode(pp));

        uint256[4] memory u = [
            30000602093739787173495417146986721310358703079958639579405310852463859758323,
            18962563320317883603906786315889751620961588393249390628317928002999469992664,
            96172969298012324124686255855798459986451385331975953084824240664042244977412,
            395534212109165185115107784899785576737939149137400697513895653206684316591
        ];
        uint256[4] memory w = [
            5118738896550548597721724021885352233591444807893824968383012831830210496511,
            64393099296361053877450734922516376376442757480606543014030010830215623796422,
            58734502392695304588130498365991338063649011532146014179752678123631049784018,
            104666930943329633999420907804065568005140567271762973290855652272707855672392
        ];

        LibSigmaProtocol.ProofOfExponentiation memory PoE;
        PoE.pi = [
            27251463783541552267511855929971812307661223668668860472428120179669268879123,
            65000386413702812047836177807155846492135656839454611708599617488423676373475,
            105625019804055918048771899569367841222217444864639095826070120151087837613733,
            16692089899538779950144611047695919867725027698895138547199594092272949369837
        ];
        PoE.j = 17;
        PoE.l = 101386264879546861318387843907181350604323036649605267629512508327298619906127;        
        lib.verifyExponentiation(
            pp,
            parametersHash,
            u,
            w,
            PoE
        );
    }
}
